#!/usr/bin/env bash
# build-all.sh
# Constrói imagens Docker para cada subdiretório que contenha um Dockerfile.
# Remove $...$ se o nome do diretório vier com $ em volta.
# Variáveis:
#   CTF_PREFIX - prefixo para as imagens (default: "ctf")
#   ROOT_DIR   - diretório raiz com os desafios (default: "ctf_challenges_5")

set -u

CTF_PREFIX="${CTF_PREFIX:-ctf}"
ROOT_DIR="${ROOT_DIR:-ctf_challenges_5}"
DOCKER_CMD="${DOCKER_CMD:-docker}"   # pode setar DOCKER_CMD="sudo docker" se quiser
FAILURES=()

echo "Iniciando build para todos os subdiretórios em: ${ROOT_DIR}"
echo "Prefixo de imagens: ${CTF_PREFIX}"
echo

if [ ! -d "${ROOT_DIR}" ]; then
  echo "ERRO: diretório raiz '${ROOT_DIR}' não existe."
  exit 2
fi

shopt -s nullglob
for dir in "${ROOT_DIR}"/*; do
  [ -d "$dir" ] || continue

  rawname="$(basename "$dir")"

  # remover $ laterais se existirem (ex: $E6_sql_injection_basic$ -> E6_sql_injection_basic)
  name="${rawname#\$}"
  name="${name%\$}"

  # procurar Dockerfile dentro do diretório (até profundidade 2)
  dockerfile="$(find "$dir" -maxdepth 2 -type f -iname Dockerfile | head -n 1 || true)"
  if [ -z "$dockerfile" ]; then
    echo "SKIP: '$rawname' (nenhum Dockerfile encontrado)"
    continue
  fi

  # normalizar name para tag docker: lowercase e caracteres inválidos -> _
  safe_name="$(echo "$name" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9._-]/_/g')"
  tag="${CTF_PREFIX}/${safe_name}:latest"

  echo "------------------------------------------------------------"
  echo "BUILD: diretório: $dir"
  echo "       Dockerfile: $dockerfile"
  echo "       Tag: $tag"
  echo

  # rodar build (não encerra todo o script em caso de falha, registra e continua)
  if ${DOCKER_CMD} build -t "${tag}" "$dir"; then
    echo "OK: build concluído para ${tag}"
  else
    echo "FAIL: build falhou para ${tag}"
    FAILURES+=("${tag}")
  fi

  echo
done

echo "------------------------------------------------------------"
if [ ${#FAILURES[@]} -eq 0 ]; then
  echo "Todos os builds concluídos com sucesso."
  exit 0
else
  echo "Alguns builds falharam:"
  for f in "${FAILURES[@]}"; do
    echo "  - $f"
  done
  exit 1
fi
