services:
  # Banco de dados MariaDB
  db:
    image: mariadb:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ctfdroot
      MYSQL_DATABASE: ctfd_evento_atual
      MYSQL_USER: ctfd
      MYSQL_PASSWORD: ctfd
      TZ: America/Sao_Paulo
    volumes:
      - ./data/mysql:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks: [ctf_net]

  # Redis — usado pelo CTFd para cache e fila
  redis:
    image: redis:7.4.0-alpine
    restart: always
    command: ["redis-server", "--appendonly", "yes"]
    environment:
      - TZ=America/Sao_Paulo
    volumes:
      - ./data/redis:/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks: [ctf_net]

  # Registro Docker privado (usado pelo Chall Manager)
  registry:
    image: registry:3.0.0
    restart: always
    ports:
      - "5000:5000"
    environment:
      - REGISTRY_STORAGE_DELETE_ENABLED=true
    volumes:
      - ./data/registry:/var/lib/registry
    networks: [ctf_net]

  # Chall Manager — controla e executa os desafios no Proxmox
  chall-manager:
    build:
      context: .
      dockerfile: chall.Dockerfile
    restart: always
    command: ["--oci.insecure"]
    environment:
      - API_URL=http://ctfd:8080
      - PROXMOX_API_URL=https://192.168.20.5:8006/api2/json
      - PROXMOX_USER=danilo@pve
      - PROXMOX_PASSWORD=Y@ra*2025
      - ORAS_INSECURE=true
      - TZ=America/Sao_Paulo
      - PULUMI_CMD=/app/exec-scenario.sh
      - PROXMOX_NODE=cecpa
    volumes:
      - ./data/chall-manager:/app/data
      - ./challenges:/scenarios
      - ./chall_tmp:/tmp/chall-manager/chall
      - ./challenges/_runner/exec-scenario.sh:/app/exec-scenario.sh:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    depends_on:
      - ctfd
    networks: [ctf_net]

  # Serviço auxiliar para limpeza de instâncias expiradas
  chall-manager-janitor:
    image: ctferio/chall-manager-janitor:v0.2.0
    restart: always
    environment:
      - URL=chall-manager:8080
      - TICKER=1m
      - TZ=America/Sao_Paulo
    depends_on:
      - chall-manager
    networks: [ctf_net]

  # Proxy protegido do Docker (socket proxy)
  docker-socket-proxy:
    image: lscr.io/linuxserver/socket-proxy:latest
    restart: always
    environment:
      - TZ=America/Sao_Paulo
      - ALLOW_START=1
      - ALLOW_STOP=1
      - ALLOW_RESTARTS=1
      - CONTAINERS=1
      - DISTRIBUTION=1
      - EVENTS=1
      - EXEC=1
      - IMAGES=1
      - INFO=1
      - LOG_LEVEL=info
      - NETWORKS=1
      - NODES=1
      - PING=1
      - PLUGINS=1
      - POST=1
      - SERVICES=1
      - SESSION=1
      - SYSTEM=1
      - TASKS=1
      - VERSION=1
      - VOLUMES=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks: [ctf_net]

  # Traefik — proxy reverso e gerenciador de HTTPS
  traefik:
    image: traefik:v3.1.2
    restart: always
    command:
      - --providers.docker=true
      - --providers.docker.endpoint=tcp://docker-socket-proxy:2375
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=ctf_net
      - --providers.file.directory=/etc/traefik/dynamic
      - --providers.file.watch=true
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      - --entryPoints.web.http.redirections.entryPoint.to=websecure
      - --entryPoints.web.http.redirections.entryPoint.scheme=https
      - --api.dashboard=true
    ports:
      - "80:80"
      - "443:443"
    environment:
      - TZ=America/Sao_Paulo
    volumes:
      - ./data/certs:/certs
      - ./data/traefik:/etc/traefik/dynamic
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks: [ctf_net]

  # CTFd — plataforma principal do evento
  ctfd:
    build:
      context: ./ctfd/
      dockerfile: Dockerfile
    restart: always
    environment:
      UPLOAD_FOLDER: /var/uploads
      DATABASE_URL: mysql+pymysql://ctfd:ctfd@db/ctfd_evento_atual
      REDIS_URL: redis://redis:6379
      REVERSE_PROXY: "true"
      TZ: America/Sao_Paulo
    volumes:
      - ./data/uploads:/var/uploads
      - ./data/logs:/var/log/CTFd
      - ./ctfd/plugins:/opt/CTFd/CTFd/plugins
      - ./ctfd/themes:/opt/CTFd/CTFd/themes
      - ./ctfd/doc:/opt/CTFd/CTFd/doc
      - ./challenges:/home/challenges
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    labels:
      # Roteamento principal HTTPS (Traefik)
      - traefik.enable=true
      - traefik.http.routers.ctfd.rule=Host(`ctf.cleverconnection.com.br`)
      - traefik.http.routers.ctfd.entrypoints=websecure
      - traefik.http.routers.ctfd.tls=true
      - traefik.http.services.ctfd.loadbalancer.server.port=8000

      # Cabeçalhos corretos para HTTPS e plugins (Career, Modules etc)
      - traefik.http.middlewares.ctfd-headers.headers.customrequestheaders.X-Forwarded-Proto=https
      - traefik.http.routers.ctfd.middlewares=ctfd-headers
    depends_on:
      - db
      - redis
    networks: [ctf_net]

  # Spawner — serviço FastAPI que integra com o Traefik para gerar VMs
  spawner:
    build: ./spawner
    restart: always
    environment:
      DOCKER_HOST: tcp://docker-socket-proxy:2375
      DOCKER_NETWORK: ctf_net
      BASE_DOMAIN: ctf.cleverconnection.com.br
      TRAEFIK_ENTRYPOINT: websecure
      FLAG_SECRET: 123456
      SPAWNER_API_SECRET: 1234567890
      TZ: America/Sao_Paulo
    depends_on:
      - docker-socket-proxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks: [ctf_net]

# Rede principal do ambiente CTF
networks:
  ctf_net:
